#pragma twice

#ifndef MATRICE_FLOAT_H
#define MATRICE_FLOAT_H

#include <stdio.h>
#include <stdlib.h>

#define DEFINE_MATRIX_TYPE(TYPE, NAME)
#define DEFINE_MATRIX_TYPE(float, matrice_float_t)
#define DEFINE_MATRIX_TYPE(int, matrice_int_t)

typedef struct {
    int lignes;
    int colonnes;
    float *data;
} NAME;

typedef struct {
    int lignes;
    int colonnes;
    int *data;
} NAME;

// fonction pour allouer un objet matrice_float
matrice_float_t* allouer_matrice(int lignes, int colonness);

// récupération des coefficients d'une matrice
void saisir_matrice(matrice_float_t *mat);

// fonction pour afficher la matrice
void afficher_matrice(const matrice_float_t *mat);

// fonction pour effectuer le produit matriciel
matrice_float_t* produit_matrices(const matrice_float_t *mat1, const matrice_float_t *mat2);

// Fonction pour désallouer une matrice
void desallouer_matrice(matrice_float_t *mat);

#endif // MATRICE_FLOAT_H
